                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Mar 24 2016) (Linux)
                                      4 ; This file was generated Sun Oct  2 10:13:52 2016
                                      5 ;--------------------------------------------------------
                                      6 	.module LCD1602
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _TF2
                                     13 	.globl _EXF2
                                     14 	.globl _RCLK
                                     15 	.globl _TCLK
                                     16 	.globl _EXEN2
                                     17 	.globl _TR2
                                     18 	.globl _C_T2
                                     19 	.globl _CP_RL2
                                     20 	.globl _T2CON_7
                                     21 	.globl _T2CON_6
                                     22 	.globl _T2CON_5
                                     23 	.globl _T2CON_4
                                     24 	.globl _T2CON_3
                                     25 	.globl _T2CON_2
                                     26 	.globl _T2CON_1
                                     27 	.globl _T2CON_0
                                     28 	.globl _PT2
                                     29 	.globl _ET2
                                     30 	.globl _CY
                                     31 	.globl _AC
                                     32 	.globl _F0
                                     33 	.globl _RS1
                                     34 	.globl _RS0
                                     35 	.globl _OV
                                     36 	.globl _F1
                                     37 	.globl _P
                                     38 	.globl _PS
                                     39 	.globl _PT1
                                     40 	.globl _PX1
                                     41 	.globl _PT0
                                     42 	.globl _PX0
                                     43 	.globl _RD
                                     44 	.globl _WR
                                     45 	.globl _T1
                                     46 	.globl _T0
                                     47 	.globl _INT1
                                     48 	.globl _INT0
                                     49 	.globl _TXD
                                     50 	.globl _RXD
                                     51 	.globl _P3_7
                                     52 	.globl _P3_6
                                     53 	.globl _P3_5
                                     54 	.globl _P3_4
                                     55 	.globl _P3_3
                                     56 	.globl _P3_2
                                     57 	.globl _P3_1
                                     58 	.globl _P3_0
                                     59 	.globl _EA
                                     60 	.globl _ES
                                     61 	.globl _ET1
                                     62 	.globl _EX1
                                     63 	.globl _ET0
                                     64 	.globl _EX0
                                     65 	.globl _P2_7
                                     66 	.globl _P2_6
                                     67 	.globl _P2_5
                                     68 	.globl _P2_4
                                     69 	.globl _P2_3
                                     70 	.globl _P2_2
                                     71 	.globl _P2_1
                                     72 	.globl _P2_0
                                     73 	.globl _SM0
                                     74 	.globl _SM1
                                     75 	.globl _SM2
                                     76 	.globl _REN
                                     77 	.globl _TB8
                                     78 	.globl _RB8
                                     79 	.globl _TI
                                     80 	.globl _RI
                                     81 	.globl _P1_7
                                     82 	.globl _P1_6
                                     83 	.globl _P1_5
                                     84 	.globl _P1_4
                                     85 	.globl _P1_3
                                     86 	.globl _P1_2
                                     87 	.globl _P1_1
                                     88 	.globl _P1_0
                                     89 	.globl _TF1
                                     90 	.globl _TR1
                                     91 	.globl _TF0
                                     92 	.globl _TR0
                                     93 	.globl _IE1
                                     94 	.globl _IT1
                                     95 	.globl _IE0
                                     96 	.globl _IT0
                                     97 	.globl _P0_7
                                     98 	.globl _P0_6
                                     99 	.globl _P0_5
                                    100 	.globl _P0_4
                                    101 	.globl _P0_3
                                    102 	.globl _P0_2
                                    103 	.globl _P0_1
                                    104 	.globl _P0_0
                                    105 	.globl _TH2
                                    106 	.globl _TL2
                                    107 	.globl _RCAP2H
                                    108 	.globl _RCAP2L
                                    109 	.globl _T2CON
                                    110 	.globl _B
                                    111 	.globl _ACC
                                    112 	.globl _PSW
                                    113 	.globl _IP
                                    114 	.globl _P3
                                    115 	.globl _IE
                                    116 	.globl _P2
                                    117 	.globl _SBUF
                                    118 	.globl _SCON
                                    119 	.globl _P1
                                    120 	.globl _TH1
                                    121 	.globl _TH0
                                    122 	.globl _TL1
                                    123 	.globl _TL0
                                    124 	.globl _TMOD
                                    125 	.globl _TCON
                                    126 	.globl _PCON
                                    127 	.globl _DPH
                                    128 	.globl _DPL
                                    129 	.globl _SP
                                    130 	.globl _P0
                                    131 	.globl _LcdShowString_PARM_3
                                    132 	.globl _LcdShowString_PARM_2
                                    133 	.globl _LcdAreaClear_PARM_3
                                    134 	.globl _LcdAreaClear_PARM_2
                                    135 	.globl _LcdSetCursor_PARM_2
                                    136 	.globl _LcdWaitReady
                                    137 	.globl _LcdWriteCmd
                                    138 	.globl _LcdWriteData
                                    139 	.globl _LcdSetCursor
                                    140 	.globl _initLcd
                                    141 	.globl _LcdFullClear
                                    142 	.globl _LcdAreaClear
                                    143 	.globl _LcdShowString
                                    144 ;--------------------------------------------------------
                                    145 ; special function registers
                                    146 ;--------------------------------------------------------
                                    147 	.area RSEG    (ABS,DATA)
      000000                        148 	.org 0x0000
                           000080   149 _P0	=	0x0080
                           000081   150 _SP	=	0x0081
                           000082   151 _DPL	=	0x0082
                           000083   152 _DPH	=	0x0083
                           000087   153 _PCON	=	0x0087
                           000088   154 _TCON	=	0x0088
                           000089   155 _TMOD	=	0x0089
                           00008A   156 _TL0	=	0x008a
                           00008B   157 _TL1	=	0x008b
                           00008C   158 _TH0	=	0x008c
                           00008D   159 _TH1	=	0x008d
                           000090   160 _P1	=	0x0090
                           000098   161 _SCON	=	0x0098
                           000099   162 _SBUF	=	0x0099
                           0000A0   163 _P2	=	0x00a0
                           0000A8   164 _IE	=	0x00a8
                           0000B0   165 _P3	=	0x00b0
                           0000B8   166 _IP	=	0x00b8
                           0000D0   167 _PSW	=	0x00d0
                           0000E0   168 _ACC	=	0x00e0
                           0000F0   169 _B	=	0x00f0
                           0000C8   170 _T2CON	=	0x00c8
                           0000CA   171 _RCAP2L	=	0x00ca
                           0000CB   172 _RCAP2H	=	0x00cb
                           0000CC   173 _TL2	=	0x00cc
                           0000CD   174 _TH2	=	0x00cd
                                    175 ;--------------------------------------------------------
                                    176 ; special function bits
                                    177 ;--------------------------------------------------------
                                    178 	.area RSEG    (ABS,DATA)
      000000                        179 	.org 0x0000
                           000080   180 _P0_0	=	0x0080
                           000081   181 _P0_1	=	0x0081
                           000082   182 _P0_2	=	0x0082
                           000083   183 _P0_3	=	0x0083
                           000084   184 _P0_4	=	0x0084
                           000085   185 _P0_5	=	0x0085
                           000086   186 _P0_6	=	0x0086
                           000087   187 _P0_7	=	0x0087
                           000088   188 _IT0	=	0x0088
                           000089   189 _IE0	=	0x0089
                           00008A   190 _IT1	=	0x008a
                           00008B   191 _IE1	=	0x008b
                           00008C   192 _TR0	=	0x008c
                           00008D   193 _TF0	=	0x008d
                           00008E   194 _TR1	=	0x008e
                           00008F   195 _TF1	=	0x008f
                           000090   196 _P1_0	=	0x0090
                           000091   197 _P1_1	=	0x0091
                           000092   198 _P1_2	=	0x0092
                           000093   199 _P1_3	=	0x0093
                           000094   200 _P1_4	=	0x0094
                           000095   201 _P1_5	=	0x0095
                           000096   202 _P1_6	=	0x0096
                           000097   203 _P1_7	=	0x0097
                           000098   204 _RI	=	0x0098
                           000099   205 _TI	=	0x0099
                           00009A   206 _RB8	=	0x009a
                           00009B   207 _TB8	=	0x009b
                           00009C   208 _REN	=	0x009c
                           00009D   209 _SM2	=	0x009d
                           00009E   210 _SM1	=	0x009e
                           00009F   211 _SM0	=	0x009f
                           0000A0   212 _P2_0	=	0x00a0
                           0000A1   213 _P2_1	=	0x00a1
                           0000A2   214 _P2_2	=	0x00a2
                           0000A3   215 _P2_3	=	0x00a3
                           0000A4   216 _P2_4	=	0x00a4
                           0000A5   217 _P2_5	=	0x00a5
                           0000A6   218 _P2_6	=	0x00a6
                           0000A7   219 _P2_7	=	0x00a7
                           0000A8   220 _EX0	=	0x00a8
                           0000A9   221 _ET0	=	0x00a9
                           0000AA   222 _EX1	=	0x00aa
                           0000AB   223 _ET1	=	0x00ab
                           0000AC   224 _ES	=	0x00ac
                           0000AF   225 _EA	=	0x00af
                           0000B0   226 _P3_0	=	0x00b0
                           0000B1   227 _P3_1	=	0x00b1
                           0000B2   228 _P3_2	=	0x00b2
                           0000B3   229 _P3_3	=	0x00b3
                           0000B4   230 _P3_4	=	0x00b4
                           0000B5   231 _P3_5	=	0x00b5
                           0000B6   232 _P3_6	=	0x00b6
                           0000B7   233 _P3_7	=	0x00b7
                           0000B0   234 _RXD	=	0x00b0
                           0000B1   235 _TXD	=	0x00b1
                           0000B2   236 _INT0	=	0x00b2
                           0000B3   237 _INT1	=	0x00b3
                           0000B4   238 _T0	=	0x00b4
                           0000B5   239 _T1	=	0x00b5
                           0000B6   240 _WR	=	0x00b6
                           0000B7   241 _RD	=	0x00b7
                           0000B8   242 _PX0	=	0x00b8
                           0000B9   243 _PT0	=	0x00b9
                           0000BA   244 _PX1	=	0x00ba
                           0000BB   245 _PT1	=	0x00bb
                           0000BC   246 _PS	=	0x00bc
                           0000D0   247 _P	=	0x00d0
                           0000D1   248 _F1	=	0x00d1
                           0000D2   249 _OV	=	0x00d2
                           0000D3   250 _RS0	=	0x00d3
                           0000D4   251 _RS1	=	0x00d4
                           0000D5   252 _F0	=	0x00d5
                           0000D6   253 _AC	=	0x00d6
                           0000D7   254 _CY	=	0x00d7
                           0000AD   255 _ET2	=	0x00ad
                           0000BD   256 _PT2	=	0x00bd
                           0000C8   257 _T2CON_0	=	0x00c8
                           0000C9   258 _T2CON_1	=	0x00c9
                           0000CA   259 _T2CON_2	=	0x00ca
                           0000CB   260 _T2CON_3	=	0x00cb
                           0000CC   261 _T2CON_4	=	0x00cc
                           0000CD   262 _T2CON_5	=	0x00cd
                           0000CE   263 _T2CON_6	=	0x00ce
                           0000CF   264 _T2CON_7	=	0x00cf
                           0000C8   265 _CP_RL2	=	0x00c8
                           0000C9   266 _C_T2	=	0x00c9
                           0000CA   267 _TR2	=	0x00ca
                           0000CB   268 _EXEN2	=	0x00cb
                           0000CC   269 _TCLK	=	0x00cc
                           0000CD   270 _RCLK	=	0x00cd
                           0000CE   271 _EXF2	=	0x00ce
                           0000CF   272 _TF2	=	0x00cf
                                    273 ;--------------------------------------------------------
                                    274 ; overlayable register banks
                                    275 ;--------------------------------------------------------
                                    276 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        277 	.ds 8
                                    278 ;--------------------------------------------------------
                                    279 ; internal ram data
                                    280 ;--------------------------------------------------------
                                    281 	.area DSEG    (DATA)
      000000                        282 _LcdSetCursor_PARM_2:
      000000                        283 	.ds 1
      000001                        284 _LcdAreaClear_PARM_2:
      000001                        285 	.ds 1
      000002                        286 _LcdAreaClear_PARM_3:
      000002                        287 	.ds 1
      000003                        288 _LcdShowString_PARM_2:
      000003                        289 	.ds 1
      000004                        290 _LcdShowString_PARM_3:
      000004                        291 	.ds 3
                                    292 ;--------------------------------------------------------
                                    293 ; overlayable items in internal ram 
                                    294 ;--------------------------------------------------------
                                    295 	.area	OSEG    (OVR,DATA)
                                    296 ;--------------------------------------------------------
                                    297 ; indirectly addressable internal ram data
                                    298 ;--------------------------------------------------------
                                    299 	.area ISEG    (DATA)
                                    300 ;--------------------------------------------------------
                                    301 ; absolute internal ram data
                                    302 ;--------------------------------------------------------
                                    303 	.area IABS    (ABS,DATA)
                                    304 	.area IABS    (ABS,DATA)
                                    305 ;--------------------------------------------------------
                                    306 ; bit data
                                    307 ;--------------------------------------------------------
                                    308 	.area BSEG    (BIT)
                                    309 ;--------------------------------------------------------
                                    310 ; paged external ram data
                                    311 ;--------------------------------------------------------
                                    312 	.area PSEG    (PAG,XDATA)
                                    313 ;--------------------------------------------------------
                                    314 ; external ram data
                                    315 ;--------------------------------------------------------
                                    316 	.area XSEG    (XDATA)
                                    317 ;--------------------------------------------------------
                                    318 ; absolute external ram data
                                    319 ;--------------------------------------------------------
                                    320 	.area XABS    (ABS,XDATA)
                                    321 ;--------------------------------------------------------
                                    322 ; external initialized ram data
                                    323 ;--------------------------------------------------------
                                    324 	.area XISEG   (XDATA)
                                    325 	.area HOME    (CODE)
                                    326 	.area GSINIT0 (CODE)
                                    327 	.area GSINIT1 (CODE)
                                    328 	.area GSINIT2 (CODE)
                                    329 	.area GSINIT3 (CODE)
                                    330 	.area GSINIT4 (CODE)
                                    331 	.area GSINIT5 (CODE)
                                    332 	.area GSINIT  (CODE)
                                    333 	.area GSFINAL (CODE)
                                    334 	.area CSEG    (CODE)
                                    335 ;--------------------------------------------------------
                                    336 ; global & static initialisations
                                    337 ;--------------------------------------------------------
                                    338 	.area HOME    (CODE)
                                    339 	.area GSINIT  (CODE)
                                    340 	.area GSFINAL (CODE)
                                    341 	.area GSINIT  (CODE)
                                    342 ;--------------------------------------------------------
                                    343 ; Home
                                    344 ;--------------------------------------------------------
                                    345 	.area HOME    (CODE)
                                    346 	.area HOME    (CODE)
                                    347 ;--------------------------------------------------------
                                    348 ; code
                                    349 ;--------------------------------------------------------
                                    350 	.area CSEG    (CODE)
                                    351 ;------------------------------------------------------------
                                    352 ;Allocation info for local variables in function 'LcdWaitReady'
                                    353 ;------------------------------------------------------------
                                    354 ;status                    Allocated to registers r7 
                                    355 ;------------------------------------------------------------
                                    356 ;	LCD1602/LCD1602.c:9: void LcdWaitReady()
                                    357 ;	-----------------------------------------
                                    358 ;	 function LcdWaitReady
                                    359 ;	-----------------------------------------
      000000                        360 _LcdWaitReady:
                           000007   361 	ar7 = 0x07
                           000006   362 	ar6 = 0x06
                           000005   363 	ar5 = 0x05
                           000004   364 	ar4 = 0x04
                           000003   365 	ar3 = 0x03
                           000002   366 	ar2 = 0x02
                           000001   367 	ar1 = 0x01
                           000000   368 	ar0 = 0x00
                                    369 ;	LCD1602/LCD1602.c:12: LCD1602_DB = 0xFF;
      000000 75 80 FF         [24]  370 	mov	_P0,#0xFF
                                    371 ;	LCD1602/LCD1602.c:13: LCD1602_RS = 0;   //状态
      000003 C2 90            [12]  372 	clr	_P1_0
                                    373 ;	LCD1602/LCD1602.c:14: LCD1602_RW = 1;   //读
      000005 D2 91            [12]  374 	setb	_P1_1
                                    375 ;	LCD1602/LCD1602.c:16: do{
      000007                        376 00101$:
                                    377 ;	LCD1602/LCD1602.c:17: LCD1602_E = 1;
      000007 D2 95            [12]  378 	setb	_P1_5
                                    379 ;	LCD1602/LCD1602.c:18: status = LCD1602_DB;  //读取状态位
      000009 AF 80            [24]  380 	mov	r7,_P0
                                    381 ;	LCD1602/LCD1602.c:19: LCD1602_E = 0;
      00000B C2 95            [12]  382 	clr	_P1_5
                                    383 ;	LCD1602/LCD1602.c:20: }while(status & 0x80);
      00000D EF               [12]  384 	mov	a,r7
      00000E 20 E7 F6         [24]  385 	jb	acc.7,00101$
      000011 22               [24]  386 	ret
                                    387 ;------------------------------------------------------------
                                    388 ;Allocation info for local variables in function 'LcdWriteCmd'
                                    389 ;------------------------------------------------------------
                                    390 ;cmd                       Allocated to registers r7 
                                    391 ;------------------------------------------------------------
                                    392 ;	LCD1602/LCD1602.c:29: void LcdWriteCmd(unsigned char cmd)
                                    393 ;	-----------------------------------------
                                    394 ;	 function LcdWriteCmd
                                    395 ;	-----------------------------------------
      000012                        396 _LcdWriteCmd:
      000012 AF 82            [24]  397 	mov	r7,dpl
                                    398 ;	LCD1602/LCD1602.c:31: LcdWaitReady();
      000014 C0 07            [24]  399 	push	ar7
      000016 12r00r00         [24]  400 	lcall	_LcdWaitReady
      000019 D0 07            [24]  401 	pop	ar7
                                    402 ;	LCD1602/LCD1602.c:32: LCD1602_RS = 0;   //命令
      00001B C2 90            [12]  403 	clr	_P1_0
                                    404 ;	LCD1602/LCD1602.c:33: LCD1602_RW = 0;   //写
      00001D C2 91            [12]  405 	clr	_P1_1
                                    406 ;	LCD1602/LCD1602.c:34: LCD1602_DB = cmd;
      00001F 8F 80            [24]  407 	mov	_P0,r7
                                    408 ;	LCD1602/LCD1602.c:35: LCD1602_E = 1;    //脉冲
      000021 D2 95            [12]  409 	setb	_P1_5
                                    410 ;	LCD1602/LCD1602.c:36: LCD1602_E = 0;
      000023 C2 95            [12]  411 	clr	_P1_5
      000025 22               [24]  412 	ret
                                    413 ;------------------------------------------------------------
                                    414 ;Allocation info for local variables in function 'LcdWriteData'
                                    415 ;------------------------------------------------------------
                                    416 ;data                      Allocated to registers r7 
                                    417 ;------------------------------------------------------------
                                    418 ;	LCD1602/LCD1602.c:45: void LcdWriteData(unsigned char data)
                                    419 ;	-----------------------------------------
                                    420 ;	 function LcdWriteData
                                    421 ;	-----------------------------------------
      000026                        422 _LcdWriteData:
      000026 AF 82            [24]  423 	mov	r7,dpl
                                    424 ;	LCD1602/LCD1602.c:47: LcdWaitReady();
      000028 C0 07            [24]  425 	push	ar7
      00002A 12r00r00         [24]  426 	lcall	_LcdWaitReady
      00002D D0 07            [24]  427 	pop	ar7
                                    428 ;	LCD1602/LCD1602.c:48: LCD1602_RS = 1;   //数据
      00002F D2 90            [12]  429 	setb	_P1_0
                                    430 ;	LCD1602/LCD1602.c:49: LCD1602_RW = 0;   //写
      000031 C2 91            [12]  431 	clr	_P1_1
                                    432 ;	LCD1602/LCD1602.c:50: LCD1602_DB = data;
      000033 8F 80            [24]  433 	mov	_P0,r7
                                    434 ;	LCD1602/LCD1602.c:51: LCD1602_E = 1;    //脉冲
      000035 D2 95            [12]  435 	setb	_P1_5
                                    436 ;	LCD1602/LCD1602.c:52: LCD1602_E = 0;
      000037 C2 95            [12]  437 	clr	_P1_5
      000039 22               [24]  438 	ret
                                    439 ;------------------------------------------------------------
                                    440 ;Allocation info for local variables in function 'LcdSetCursor'
                                    441 ;------------------------------------------------------------
                                    442 ;y                         Allocated with name '_LcdSetCursor_PARM_2'
                                    443 ;x                         Allocated to registers r7 
                                    444 ;addr                      Allocated to registers r6 
                                    445 ;------------------------------------------------------------
                                    446 ;	LCD1602/LCD1602.c:62: void LcdSetCursor(unsigned char x, unsigned char y)
                                    447 ;	-----------------------------------------
                                    448 ;	 function LcdSetCursor
                                    449 ;	-----------------------------------------
      00003A                        450 _LcdSetCursor:
      00003A AF 82            [24]  451 	mov	r7,dpl
                                    452 ;	LCD1602/LCD1602.c:65: if( y == 0)  //根据输入计算地址
      00003C E5*00            [12]  453 	mov	a,_LcdSetCursor_PARM_2
      00003E 70 04            [24]  454 	jnz	00102$
                                    455 ;	LCD1602/LCD1602.c:67: addr = 0+x; //第一行地址从0x00开始
      000040 8F 06            [24]  456 	mov	ar6,r7
      000042 80 04            [24]  457 	sjmp	00103$
      000044                        458 00102$:
                                    459 ;	LCD1602/LCD1602.c:71: addr = 0x40 + x;  //第二行地址从0x40开始
      000044 74 40            [12]  460 	mov	a,#0x40
      000046 2F               [12]  461 	add	a,r7
      000047 FE               [12]  462 	mov	r6,a
      000048                        463 00103$:
                                    464 ;	LCD1602/LCD1602.c:73: LcdWriteCmd(addr | 0x80); //设置RAM地址
      000048 74 80            [12]  465 	mov	a,#0x80
      00004A 4E               [12]  466 	orl	a,r6
      00004B F5 82            [12]  467 	mov	dpl,a
      00004D 02r00r12         [24]  468 	ljmp	_LcdWriteCmd
                                    469 ;------------------------------------------------------------
                                    470 ;Allocation info for local variables in function 'initLcd'
                                    471 ;------------------------------------------------------------
                                    472 ;	LCD1602/LCD1602.c:82: void initLcd()
                                    473 ;	-----------------------------------------
                                    474 ;	 function initLcd
                                    475 ;	-----------------------------------------
      000050                        476 _initLcd:
                                    477 ;	LCD1602/LCD1602.c:84: LcdWriteCmd(0x38);  //16*2显示,5*7点阵,8数据接口
      000050 75 82 38         [24]  478 	mov	dpl,#0x38
      000053 12r00r12         [24]  479 	lcall	_LcdWriteCmd
                                    480 ;	LCD1602/LCD1602.c:85: LcdWriteCmd(0x0C);  //显示器开,光标关闭
      000056 75 82 0C         [24]  481 	mov	dpl,#0x0C
      000059 12r00r12         [24]  482 	lcall	_LcdWriteCmd
                                    483 ;	LCD1602/LCD1602.c:86: LcdWriteCmd(0x06);  //文字不动,地址自动加一
      00005C 75 82 06         [24]  484 	mov	dpl,#0x06
      00005F 12r00r12         [24]  485 	lcall	_LcdWriteCmd
                                    486 ;	LCD1602/LCD1602.c:87: LcdWriteCmd(0x01);  //清屏
      000062 75 82 01         [24]  487 	mov	dpl,#0x01
      000065 02r00r12         [24]  488 	ljmp	_LcdWriteCmd
                                    489 ;------------------------------------------------------------
                                    490 ;Allocation info for local variables in function 'LcdFullClear'
                                    491 ;------------------------------------------------------------
                                    492 ;	LCD1602/LCD1602.c:96: void LcdFullClear()
                                    493 ;	-----------------------------------------
                                    494 ;	 function LcdFullClear
                                    495 ;	-----------------------------------------
      000068                        496 _LcdFullClear:
                                    497 ;	LCD1602/LCD1602.c:98: LcdWriteCmd(0x01);
      000068 75 82 01         [24]  498 	mov	dpl,#0x01
      00006B 02r00r12         [24]  499 	ljmp	_LcdWriteCmd
                                    500 ;------------------------------------------------------------
                                    501 ;Allocation info for local variables in function 'LcdAreaClear'
                                    502 ;------------------------------------------------------------
                                    503 ;y                         Allocated with name '_LcdAreaClear_PARM_2'
                                    504 ;len                       Allocated with name '_LcdAreaClear_PARM_3'
                                    505 ;x                         Allocated to registers 
                                    506 ;------------------------------------------------------------
                                    507 ;	LCD1602/LCD1602.c:107: void LcdAreaClear(unsigned char x, unsigned char y, unsigned char len)
                                    508 ;	-----------------------------------------
                                    509 ;	 function LcdAreaClear
                                    510 ;	-----------------------------------------
      00006E                        511 _LcdAreaClear:
                                    512 ;	LCD1602/LCD1602.c:109: LcdSetCursor(x,y); //将光标移动到制定位置
      00006E 85*01*00         [24]  513 	mov	_LcdSetCursor_PARM_2,_LcdAreaClear_PARM_2
      000071 12r00r3A         [24]  514 	lcall	_LcdSetCursor
                                    515 ;	LCD1602/LCD1602.c:110: while(len--)
      000074 AF*02            [24]  516 	mov	r7,_LcdAreaClear_PARM_3
      000076                        517 00101$:
      000076 8F 06            [24]  518 	mov	ar6,r7
      000078 1F               [12]  519 	dec	r7
      000079 EE               [12]  520 	mov	a,r6
      00007A 60 0C            [24]  521 	jz	00104$
                                    522 ;	LCD1602/LCD1602.c:112: LcdWriteData(' ');
      00007C 75 82 20         [24]  523 	mov	dpl,#0x20
      00007F C0 07            [24]  524 	push	ar7
      000081 12r00r26         [24]  525 	lcall	_LcdWriteData
      000084 D0 07            [24]  526 	pop	ar7
      000086 80 EE            [24]  527 	sjmp	00101$
      000088                        528 00104$:
      000088 22               [24]  529 	ret
                                    530 ;------------------------------------------------------------
                                    531 ;Allocation info for local variables in function 'LcdShowString'
                                    532 ;------------------------------------------------------------
                                    533 ;y                         Allocated with name '_LcdShowString_PARM_2'
                                    534 ;str                       Allocated with name '_LcdShowString_PARM_3'
                                    535 ;x                         Allocated to registers 
                                    536 ;------------------------------------------------------------
                                    537 ;	LCD1602/LCD1602.c:123: void LcdShowString(unsigned char x, unsigned char y,unsigned char *str)
                                    538 ;	-----------------------------------------
                                    539 ;	 function LcdShowString
                                    540 ;	-----------------------------------------
      000089                        541 _LcdShowString:
                                    542 ;	LCD1602/LCD1602.c:125: LcdSetCursor(x,y); //设置起始地址
      000089 85*03*00         [24]  543 	mov	_LcdSetCursor_PARM_2,_LcdShowString_PARM_2
      00008C 12r00r3A         [24]  544 	lcall	_LcdSetCursor
                                    545 ;	LCD1602/LCD1602.c:126: while(*str != '\0')  //连续写入数据,直到检测到结束符
      00008F AD*04            [24]  546 	mov	r5,_LcdShowString_PARM_3
      000091 AE*05            [24]  547 	mov	r6,(_LcdShowString_PARM_3 + 1)
      000093 AF*06            [24]  548 	mov	r7,(_LcdShowString_PARM_3 + 2)
      000095                        549 00101$:
      000095 8D 82            [24]  550 	mov	dpl,r5
      000097 8E 83            [24]  551 	mov	dph,r6
      000099 8F F0            [24]  552 	mov	b,r7
      00009B 12r00r00         [24]  553 	lcall	__gptrget
      00009E FC               [12]  554 	mov	r4,a
      00009F 60 18            [24]  555 	jz	00104$
                                    556 ;	LCD1602/LCD1602.c:128: LcdWriteData(*str++);  //先发送数据,然后str+1
      0000A1 8C 82            [24]  557 	mov	dpl,r4
      0000A3 0D               [12]  558 	inc	r5
      0000A4 BD 00 01         [24]  559 	cjne	r5,#0x00,00114$
      0000A7 0E               [12]  560 	inc	r6
      0000A8                        561 00114$:
      0000A8 C0 07            [24]  562 	push	ar7
      0000AA C0 06            [24]  563 	push	ar6
      0000AC C0 05            [24]  564 	push	ar5
      0000AE 12r00r26         [24]  565 	lcall	_LcdWriteData
      0000B1 D0 05            [24]  566 	pop	ar5
      0000B3 D0 06            [24]  567 	pop	ar6
      0000B5 D0 07            [24]  568 	pop	ar7
      0000B7 80 DC            [24]  569 	sjmp	00101$
      0000B9                        570 00104$:
      0000B9 22               [24]  571 	ret
                                    572 	.area CSEG    (CODE)
                                    573 	.area CONST   (CODE)
                                    574 	.area XINIT   (CODE)
                                    575 	.area CABS    (ABS,CODE)

                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Mar 24 2016) (Linux)
                                      4 ; This file was generated Sun Oct  2 10:13:52 2016
                                      5 ;--------------------------------------------------------
                                      6 	.module DS1302
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _TF2
                                     13 	.globl _EXF2
                                     14 	.globl _RCLK
                                     15 	.globl _TCLK
                                     16 	.globl _EXEN2
                                     17 	.globl _TR2
                                     18 	.globl _C_T2
                                     19 	.globl _CP_RL2
                                     20 	.globl _T2CON_7
                                     21 	.globl _T2CON_6
                                     22 	.globl _T2CON_5
                                     23 	.globl _T2CON_4
                                     24 	.globl _T2CON_3
                                     25 	.globl _T2CON_2
                                     26 	.globl _T2CON_1
                                     27 	.globl _T2CON_0
                                     28 	.globl _PT2
                                     29 	.globl _ET2
                                     30 	.globl _CY
                                     31 	.globl _AC
                                     32 	.globl _F0
                                     33 	.globl _RS1
                                     34 	.globl _RS0
                                     35 	.globl _OV
                                     36 	.globl _F1
                                     37 	.globl _P
                                     38 	.globl _PS
                                     39 	.globl _PT1
                                     40 	.globl _PX1
                                     41 	.globl _PT0
                                     42 	.globl _PX0
                                     43 	.globl _RD
                                     44 	.globl _WR
                                     45 	.globl _T1
                                     46 	.globl _T0
                                     47 	.globl _INT1
                                     48 	.globl _INT0
                                     49 	.globl _TXD
                                     50 	.globl _RXD
                                     51 	.globl _P3_7
                                     52 	.globl _P3_6
                                     53 	.globl _P3_5
                                     54 	.globl _P3_4
                                     55 	.globl _P3_3
                                     56 	.globl _P3_2
                                     57 	.globl _P3_1
                                     58 	.globl _P3_0
                                     59 	.globl _EA
                                     60 	.globl _ES
                                     61 	.globl _ET1
                                     62 	.globl _EX1
                                     63 	.globl _ET0
                                     64 	.globl _EX0
                                     65 	.globl _P2_7
                                     66 	.globl _P2_6
                                     67 	.globl _P2_5
                                     68 	.globl _P2_4
                                     69 	.globl _P2_3
                                     70 	.globl _P2_2
                                     71 	.globl _P2_1
                                     72 	.globl _P2_0
                                     73 	.globl _SM0
                                     74 	.globl _SM1
                                     75 	.globl _SM2
                                     76 	.globl _REN
                                     77 	.globl _TB8
                                     78 	.globl _RB8
                                     79 	.globl _TI
                                     80 	.globl _RI
                                     81 	.globl _P1_7
                                     82 	.globl _P1_6
                                     83 	.globl _P1_5
                                     84 	.globl _P1_4
                                     85 	.globl _P1_3
                                     86 	.globl _P1_2
                                     87 	.globl _P1_1
                                     88 	.globl _P1_0
                                     89 	.globl _TF1
                                     90 	.globl _TR1
                                     91 	.globl _TF0
                                     92 	.globl _TR0
                                     93 	.globl _IE1
                                     94 	.globl _IT1
                                     95 	.globl _IE0
                                     96 	.globl _IT0
                                     97 	.globl _P0_7
                                     98 	.globl _P0_6
                                     99 	.globl _P0_5
                                    100 	.globl _P0_4
                                    101 	.globl _P0_3
                                    102 	.globl _P0_2
                                    103 	.globl _P0_1
                                    104 	.globl _P0_0
                                    105 	.globl _TH2
                                    106 	.globl _TL2
                                    107 	.globl _RCAP2H
                                    108 	.globl _RCAP2L
                                    109 	.globl _T2CON
                                    110 	.globl _B
                                    111 	.globl _ACC
                                    112 	.globl _PSW
                                    113 	.globl _IP
                                    114 	.globl _P3
                                    115 	.globl _IE
                                    116 	.globl _P2
                                    117 	.globl _SBUF
                                    118 	.globl _SCON
                                    119 	.globl _P1
                                    120 	.globl _TH1
                                    121 	.globl _TH0
                                    122 	.globl _TL1
                                    123 	.globl _TL0
                                    124 	.globl _TMOD
                                    125 	.globl _TCON
                                    126 	.globl _PCON
                                    127 	.globl _DPH
                                    128 	.globl _DPL
                                    129 	.globl _SP
                                    130 	.globl _P0
                                    131 	.globl _ds1302SingleWrite_PARM_2
                                    132 	.globl _initDS1302
                                    133 	.globl _ds1302ByteWrite
                                    134 	.globl _ds1302ByteRead
                                    135 	.globl _ds1302SingleRead
                                    136 	.globl _ds1302SingleWrite
                                    137 	.globl _ds1302BurstRead
                                    138 	.globl _ds1302BurstWrite
                                    139 	.globl _setDs1302Time
                                    140 	.globl _getDs1302Time
                                    141 ;--------------------------------------------------------
                                    142 ; special function registers
                                    143 ;--------------------------------------------------------
                                    144 	.area RSEG    (ABS,DATA)
      000000                        145 	.org 0x0000
                           000080   146 _P0	=	0x0080
                           000081   147 _SP	=	0x0081
                           000082   148 _DPL	=	0x0082
                           000083   149 _DPH	=	0x0083
                           000087   150 _PCON	=	0x0087
                           000088   151 _TCON	=	0x0088
                           000089   152 _TMOD	=	0x0089
                           00008A   153 _TL0	=	0x008a
                           00008B   154 _TL1	=	0x008b
                           00008C   155 _TH0	=	0x008c
                           00008D   156 _TH1	=	0x008d
                           000090   157 _P1	=	0x0090
                           000098   158 _SCON	=	0x0098
                           000099   159 _SBUF	=	0x0099
                           0000A0   160 _P2	=	0x00a0
                           0000A8   161 _IE	=	0x00a8
                           0000B0   162 _P3	=	0x00b0
                           0000B8   163 _IP	=	0x00b8
                           0000D0   164 _PSW	=	0x00d0
                           0000E0   165 _ACC	=	0x00e0
                           0000F0   166 _B	=	0x00f0
                           0000C8   167 _T2CON	=	0x00c8
                           0000CA   168 _RCAP2L	=	0x00ca
                           0000CB   169 _RCAP2H	=	0x00cb
                           0000CC   170 _TL2	=	0x00cc
                           0000CD   171 _TH2	=	0x00cd
                                    172 ;--------------------------------------------------------
                                    173 ; special function bits
                                    174 ;--------------------------------------------------------
                                    175 	.area RSEG    (ABS,DATA)
      000000                        176 	.org 0x0000
                           000080   177 _P0_0	=	0x0080
                           000081   178 _P0_1	=	0x0081
                           000082   179 _P0_2	=	0x0082
                           000083   180 _P0_3	=	0x0083
                           000084   181 _P0_4	=	0x0084
                           000085   182 _P0_5	=	0x0085
                           000086   183 _P0_6	=	0x0086
                           000087   184 _P0_7	=	0x0087
                           000088   185 _IT0	=	0x0088
                           000089   186 _IE0	=	0x0089
                           00008A   187 _IT1	=	0x008a
                           00008B   188 _IE1	=	0x008b
                           00008C   189 _TR0	=	0x008c
                           00008D   190 _TF0	=	0x008d
                           00008E   191 _TR1	=	0x008e
                           00008F   192 _TF1	=	0x008f
                           000090   193 _P1_0	=	0x0090
                           000091   194 _P1_1	=	0x0091
                           000092   195 _P1_2	=	0x0092
                           000093   196 _P1_3	=	0x0093
                           000094   197 _P1_4	=	0x0094
                           000095   198 _P1_5	=	0x0095
                           000096   199 _P1_6	=	0x0096
                           000097   200 _P1_7	=	0x0097
                           000098   201 _RI	=	0x0098
                           000099   202 _TI	=	0x0099
                           00009A   203 _RB8	=	0x009a
                           00009B   204 _TB8	=	0x009b
                           00009C   205 _REN	=	0x009c
                           00009D   206 _SM2	=	0x009d
                           00009E   207 _SM1	=	0x009e
                           00009F   208 _SM0	=	0x009f
                           0000A0   209 _P2_0	=	0x00a0
                           0000A1   210 _P2_1	=	0x00a1
                           0000A2   211 _P2_2	=	0x00a2
                           0000A3   212 _P2_3	=	0x00a3
                           0000A4   213 _P2_4	=	0x00a4
                           0000A5   214 _P2_5	=	0x00a5
                           0000A6   215 _P2_6	=	0x00a6
                           0000A7   216 _P2_7	=	0x00a7
                           0000A8   217 _EX0	=	0x00a8
                           0000A9   218 _ET0	=	0x00a9
                           0000AA   219 _EX1	=	0x00aa
                           0000AB   220 _ET1	=	0x00ab
                           0000AC   221 _ES	=	0x00ac
                           0000AF   222 _EA	=	0x00af
                           0000B0   223 _P3_0	=	0x00b0
                           0000B1   224 _P3_1	=	0x00b1
                           0000B2   225 _P3_2	=	0x00b2
                           0000B3   226 _P3_3	=	0x00b3
                           0000B4   227 _P3_4	=	0x00b4
                           0000B5   228 _P3_5	=	0x00b5
                           0000B6   229 _P3_6	=	0x00b6
                           0000B7   230 _P3_7	=	0x00b7
                           0000B0   231 _RXD	=	0x00b0
                           0000B1   232 _TXD	=	0x00b1
                           0000B2   233 _INT0	=	0x00b2
                           0000B3   234 _INT1	=	0x00b3
                           0000B4   235 _T0	=	0x00b4
                           0000B5   236 _T1	=	0x00b5
                           0000B6   237 _WR	=	0x00b6
                           0000B7   238 _RD	=	0x00b7
                           0000B8   239 _PX0	=	0x00b8
                           0000B9   240 _PT0	=	0x00b9
                           0000BA   241 _PX1	=	0x00ba
                           0000BB   242 _PT1	=	0x00bb
                           0000BC   243 _PS	=	0x00bc
                           0000D0   244 _P	=	0x00d0
                           0000D1   245 _F1	=	0x00d1
                           0000D2   246 _OV	=	0x00d2
                           0000D3   247 _RS0	=	0x00d3
                           0000D4   248 _RS1	=	0x00d4
                           0000D5   249 _F0	=	0x00d5
                           0000D6   250 _AC	=	0x00d6
                           0000D7   251 _CY	=	0x00d7
                           0000AD   252 _ET2	=	0x00ad
                           0000BD   253 _PT2	=	0x00bd
                           0000C8   254 _T2CON_0	=	0x00c8
                           0000C9   255 _T2CON_1	=	0x00c9
                           0000CA   256 _T2CON_2	=	0x00ca
                           0000CB   257 _T2CON_3	=	0x00cb
                           0000CC   258 _T2CON_4	=	0x00cc
                           0000CD   259 _T2CON_5	=	0x00cd
                           0000CE   260 _T2CON_6	=	0x00ce
                           0000CF   261 _T2CON_7	=	0x00cf
                           0000C8   262 _CP_RL2	=	0x00c8
                           0000C9   263 _C_T2	=	0x00c9
                           0000CA   264 _TR2	=	0x00ca
                           0000CB   265 _EXEN2	=	0x00cb
                           0000CC   266 _TCLK	=	0x00cc
                           0000CD   267 _RCLK	=	0x00cd
                           0000CE   268 _EXF2	=	0x00ce
                           0000CF   269 _TF2	=	0x00cf
                                    270 ;--------------------------------------------------------
                                    271 ; overlayable register banks
                                    272 ;--------------------------------------------------------
                                    273 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        274 	.ds 8
                                    275 ;--------------------------------------------------------
                                    276 ; internal ram data
                                    277 ;--------------------------------------------------------
                                    278 	.area DSEG    (DATA)
      000000                        279 _initDS1302_InitTime_1_8:
      000000                        280 	.ds 7
      000007                        281 _ds1302SingleWrite_PARM_2:
      000007                        282 	.ds 1
                                    283 ;--------------------------------------------------------
                                    284 ; overlayable items in internal ram 
                                    285 ;--------------------------------------------------------
                                    286 	.area	OSEG    (OVR,DATA)
                                    287 	.area	OSEG    (OVR,DATA)
                                    288 	.area	OSEG    (OVR,DATA)
                                    289 	.area	OSEG    (OVR,DATA)
                                    290 ;--------------------------------------------------------
                                    291 ; indirectly addressable internal ram data
                                    292 ;--------------------------------------------------------
                                    293 	.area ISEG    (DATA)
                                    294 ;--------------------------------------------------------
                                    295 ; absolute internal ram data
                                    296 ;--------------------------------------------------------
                                    297 	.area IABS    (ABS,DATA)
                                    298 	.area IABS    (ABS,DATA)
                                    299 ;--------------------------------------------------------
                                    300 ; bit data
                                    301 ;--------------------------------------------------------
                                    302 	.area BSEG    (BIT)
                                    303 ;--------------------------------------------------------
                                    304 ; paged external ram data
                                    305 ;--------------------------------------------------------
                                    306 	.area PSEG    (PAG,XDATA)
                                    307 ;--------------------------------------------------------
                                    308 ; external ram data
                                    309 ;--------------------------------------------------------
                                    310 	.area XSEG    (XDATA)
                                    311 ;--------------------------------------------------------
                                    312 ; absolute external ram data
                                    313 ;--------------------------------------------------------
                                    314 	.area XABS    (ABS,XDATA)
                                    315 ;--------------------------------------------------------
                                    316 ; external initialized ram data
                                    317 ;--------------------------------------------------------
                                    318 	.area XISEG   (XDATA)
                                    319 	.area HOME    (CODE)
                                    320 	.area GSINIT0 (CODE)
                                    321 	.area GSINIT1 (CODE)
                                    322 	.area GSINIT2 (CODE)
                                    323 	.area GSINIT3 (CODE)
                                    324 	.area GSINIT4 (CODE)
                                    325 	.area GSINIT5 (CODE)
                                    326 	.area GSINIT  (CODE)
                                    327 	.area GSFINAL (CODE)
                                    328 	.area CSEG    (CODE)
                                    329 ;--------------------------------------------------------
                                    330 ; global & static initialisations
                                    331 ;--------------------------------------------------------
                                    332 	.area HOME    (CODE)
                                    333 	.area GSINIT  (CODE)
                                    334 	.area GSFINAL (CODE)
                                    335 	.area GSINIT  (CODE)
                                    336 ;--------------------------------------------------------
                                    337 ; Home
                                    338 ;--------------------------------------------------------
                                    339 	.area HOME    (CODE)
                                    340 	.area HOME    (CODE)
                                    341 ;--------------------------------------------------------
                                    342 ; code
                                    343 ;--------------------------------------------------------
                                    344 	.area CSEG    (CODE)
                                    345 ;------------------------------------------------------------
                                    346 ;Allocation info for local variables in function 'initDS1302'
                                    347 ;------------------------------------------------------------
                                    348 ;dat                       Allocated to registers 
                                    349 ;InitTime                  Allocated with name '_initDS1302_InitTime_1_8'
                                    350 ;------------------------------------------------------------
                                    351 ;	DS1302/DS1302.c:9: void initDS1302()
                                    352 ;	-----------------------------------------
                                    353 ;	 function initDS1302
                                    354 ;	-----------------------------------------
      000000                        355 _initDS1302:
                           000007   356 	ar7 = 0x07
                           000006   357 	ar6 = 0x06
                           000005   358 	ar5 = 0x05
                           000004   359 	ar4 = 0x04
                           000003   360 	ar3 = 0x03
                           000002   361 	ar2 = 0x02
                           000001   362 	ar1 = 0x01
                           000000   363 	ar0 = 0x00
                                    364 ;	DS1302/DS1302.c:13: unsigned char InitTime[] = { 
      000000 75*00 00         [24]  365 	mov	_initDS1302_InitTime_1_8,#0x00
      000003 75*01 30         [24]  366 	mov	(_initDS1302_InitTime_1_8 + 0x0001),#0x30
      000006 75*02 12         [24]  367 	mov	(_initDS1302_InitTime_1_8 + 0x0002),#0x12
      000009 75*03 08         [24]  368 	mov	(_initDS1302_InitTime_1_8 + 0x0003),#0x08
      00000C 75*04 10         [24]  369 	mov	(_initDS1302_InitTime_1_8 + 0x0004),#0x10
      00000F 75*05 02         [24]  370 	mov	(_initDS1302_InitTime_1_8 + 0x0005),#0x02
      000012 75*06 13         [24]  371 	mov	(_initDS1302_InitTime_1_8 + 0x0006),#0x13
                                    372 ;	DS1302/DS1302.c:16: DS1302_CE = 0; //初始化 DS1302 通信引脚
      000015 C2 97            [12]  373 	clr	_P1_7
                                    374 ;	DS1302/DS1302.c:17: DS1302_CK = 0;
      000017 C2 B5            [12]  375 	clr	_P3_5
                                    376 ;	DS1302/DS1302.c:18: dat = ds1302SingleRead(0); //读取秒寄存器
      000019 75 82 00         [24]  377 	mov	dpl,#0x00
      00001C 12r00r6B         [24]  378 	lcall	_ds1302SingleRead
      00001F E5 82            [12]  379 	mov	a,dpl
                                    380 ;	DS1302/DS1302.c:20: if ((dat & 0x80) != 0)
      000021 30 E7 12         [24]  381 	jnb	acc.7,00103$
                                    382 ;	DS1302/DS1302.c:22: ds1302SingleWrite(7, 0x00); //撤销写保护以允许写入数据
      000024 75*07 00         [24]  383 	mov	_ds1302SingleWrite_PARM_2,#0x00
      000027 75 82 07         [24]  384 	mov	dpl,#0x07
      00002A 12r00r80         [24]  385 	lcall	_ds1302SingleWrite
                                    386 ;	DS1302/DS1302.c:23: ds1302BurstWrite(InitTime); //设置 DS1302 为默认的初始时间
      00002D 90r00r00         [24]  387 	mov	dptr,#_initDS1302_InitTime_1_8
      000030 75 F0 40         [24]  388 	mov	b,#0x40
      000033 02r00rF0         [24]  389 	ljmp	_ds1302BurstWrite
      000036                        390 00103$:
      000036 22               [24]  391 	ret
                                    392 ;------------------------------------------------------------
                                    393 ;Allocation info for local variables in function 'ds1302ByteWrite'
                                    394 ;------------------------------------------------------------
                                    395 ;data                      Allocated to registers r7 
                                    396 ;mask                      Allocated to registers r6 
                                    397 ;------------------------------------------------------------
                                    398 ;	DS1302/DS1302.c:33: void ds1302ByteWrite(unsigned char data)
                                    399 ;	-----------------------------------------
                                    400 ;	 function ds1302ByteWrite
                                    401 ;	-----------------------------------------
      000037                        402 _ds1302ByteWrite:
      000037 AF 82            [24]  403 	mov	r7,dpl
                                    404 ;	DS1302/DS1302.c:36: for(mask = 0x01; mask != 0; mask <<= 1)   //低位在前
      000039 7E 01            [12]  405 	mov	r6,#0x01
      00003B                        406 00105$:
                                    407 ;	DS1302/DS1302.c:38: if( (mask & data) == 0)
      00003B EF               [12]  408 	mov	a,r7
      00003C 5E               [12]  409 	anl	a,r6
      00003D 70 04            [24]  410 	jnz	00102$
                                    411 ;	DS1302/DS1302.c:40: DS1302_IO = 0;    //发送低电平
      00003F C2 B4            [12]  412 	clr	_P3_4
      000041 80 02            [24]  413 	sjmp	00103$
      000043                        414 00102$:
                                    415 ;	DS1302/DS1302.c:44: DS1302_IO = 1;    //发送高电平
      000043 D2 B4            [12]  416 	setb	_P3_4
      000045                        417 00103$:
                                    418 ;	DS1302/DS1302.c:46: DS1302_CK = 1;   //上升沿
      000045 D2 B5            [12]  419 	setb	_P3_5
                                    420 ;	DS1302/DS1302.c:47: DS1302_CK = 0;   //下降沿
      000047 C2 B5            [12]  421 	clr	_P3_5
                                    422 ;	DS1302/DS1302.c:36: for(mask = 0x01; mask != 0; mask <<= 1)   //低位在前
      000049 EE               [12]  423 	mov	a,r6
      00004A 2E               [12]  424 	add	a,r6
      00004B FE               [12]  425 	mov	r6,a
      00004C 60 02            [24]  426 	jz	00120$
      00004E 80 EB            [24]  427 	sjmp	00105$
      000050                        428 00120$:
                                    429 ;	DS1302/DS1302.c:50: DS1302_IO = 1; //最后确保释放 IO 引脚
      000050 D2 B4            [12]  430 	setb	_P3_4
      000052 22               [24]  431 	ret
                                    432 ;------------------------------------------------------------
                                    433 ;Allocation info for local variables in function 'ds1302ByteRead'
                                    434 ;------------------------------------------------------------
                                    435 ;data                      Allocated to registers r7 
                                    436 ;mask                      Allocated to registers r6 
                                    437 ;------------------------------------------------------------
                                    438 ;	DS1302/DS1302.c:60: unsigned char ds1302ByteRead()
                                    439 ;	-----------------------------------------
                                    440 ;	 function ds1302ByteRead
                                    441 ;	-----------------------------------------
      000053                        442 _ds1302ByteRead:
                                    443 ;	DS1302/DS1302.c:62: unsigned char data = 0;
      000053 7F 00            [12]  444 	mov	r7,#0x00
                                    445 ;	DS1302/DS1302.c:64: for(mask = 0x01; mask != 0; mask <<= 1)   //低位在前
      000055 7E 01            [12]  446 	mov	r6,#0x01
      000057                        447 00104$:
                                    448 ;	DS1302/DS1302.c:66: if( DS1302_IO != 0)   //先上升沿之前读,这是因为模拟spi的问题
      000057 30 B4 03         [24]  449 	jnb	_P3_4,00102$
                                    450 ;	DS1302/DS1302.c:68: data |= mask;    //保存高电平
      00005A EE               [12]  451 	mov	a,r6
      00005B 42 07            [12]  452 	orl	ar7,a
      00005D                        453 00102$:
                                    454 ;	DS1302/DS1302.c:70: DS1302_CK = 1;   //上升沿
      00005D D2 B5            [12]  455 	setb	_P3_5
                                    456 ;	DS1302/DS1302.c:71: DS1302_CK = 0;   //下降沿
      00005F C2 B5            [12]  457 	clr	_P3_5
                                    458 ;	DS1302/DS1302.c:64: for(mask = 0x01; mask != 0; mask <<= 1)   //低位在前
      000061 EE               [12]  459 	mov	a,r6
      000062 2E               [12]  460 	add	a,r6
      000063 FE               [12]  461 	mov	r6,a
      000064 60 02            [24]  462 	jz	00119$
      000066 80 EF            [24]  463 	sjmp	00104$
      000068                        464 00119$:
                                    465 ;	DS1302/DS1302.c:74: return data;
      000068 8F 82            [24]  466 	mov	dpl,r7
      00006A 22               [24]  467 	ret
                                    468 ;------------------------------------------------------------
                                    469 ;Allocation info for local variables in function 'ds1302SingleRead'
                                    470 ;------------------------------------------------------------
                                    471 ;addr                      Allocated to registers r7 
                                    472 ;data                      Allocated to registers 
                                    473 ;------------------------------------------------------------
                                    474 ;	DS1302/DS1302.c:83: unsigned char ds1302SingleRead(unsigned char addr)
                                    475 ;	-----------------------------------------
                                    476 ;	 function ds1302SingleRead
                                    477 ;	-----------------------------------------
      00006B                        478 _ds1302SingleRead:
      00006B AF 82            [24]  479 	mov	r7,dpl
                                    480 ;	DS1302/DS1302.c:86: DS1302_CE = 1;   //使能定ds1302芯片
      00006D D2 97            [12]  481 	setb	_P1_7
                                    482 ;	DS1302/DS1302.c:87: ds1302ByteWrite((addr << 1) | 0x81);
      00006F EF               [12]  483 	mov	a,r7
      000070 2F               [12]  484 	add	a,r7
      000071 FF               [12]  485 	mov	r7,a
      000072 74 81            [12]  486 	mov	a,#0x81
      000074 4F               [12]  487 	orl	a,r7
      000075 F5 82            [12]  488 	mov	dpl,a
      000077 12r00r37         [24]  489 	lcall	_ds1302ByteWrite
                                    490 ;	DS1302/DS1302.c:88: data = ds1302ByteRead();
      00007A 12r00r53         [24]  491 	lcall	_ds1302ByteRead
                                    492 ;	DS1302/DS1302.c:89: DS1302_CE = 0;   //禁止定ds1302芯片
      00007D C2 97            [12]  493 	clr	_P1_7
                                    494 ;	DS1302/DS1302.c:90: return data;
      00007F 22               [24]  495 	ret
                                    496 ;------------------------------------------------------------
                                    497 ;Allocation info for local variables in function 'ds1302SingleWrite'
                                    498 ;------------------------------------------------------------
                                    499 ;data                      Allocated with name '_ds1302SingleWrite_PARM_2'
                                    500 ;addr                      Allocated to registers r7 
                                    501 ;------------------------------------------------------------
                                    502 ;	DS1302/DS1302.c:100: void ds1302SingleWrite(unsigned char addr, unsigned char data)
                                    503 ;	-----------------------------------------
                                    504 ;	 function ds1302SingleWrite
                                    505 ;	-----------------------------------------
      000080                        506 _ds1302SingleWrite:
      000080 AF 82            [24]  507 	mov	r7,dpl
                                    508 ;	DS1302/DS1302.c:102: DS1302_CE = 1;   //使能定ds1302芯片
      000082 D2 97            [12]  509 	setb	_P1_7
                                    510 ;	DS1302/DS1302.c:103: ds1302ByteWrite( (addr << 1) | 0x80);
      000084 EF               [12]  511 	mov	a,r7
      000085 2F               [12]  512 	add	a,r7
      000086 FF               [12]  513 	mov	r7,a
      000087 74 80            [12]  514 	mov	a,#0x80
      000089 4F               [12]  515 	orl	a,r7
      00008A F5 82            [12]  516 	mov	dpl,a
      00008C 12r00r37         [24]  517 	lcall	_ds1302ByteWrite
                                    518 ;	DS1302/DS1302.c:104: ds1302ByteWrite(data);
      00008F 85*07 82         [24]  519 	mov	dpl,_ds1302SingleWrite_PARM_2
      000092 12r00r37         [24]  520 	lcall	_ds1302ByteWrite
                                    521 ;	DS1302/DS1302.c:105: DS1302_CE = 0;   //禁止定ds1302芯片
      000095 C2 97            [12]  522 	clr	_P1_7
      000097 22               [24]  523 	ret
                                    524 ;------------------------------------------------------------
                                    525 ;Allocation info for local variables in function 'ds1302BurstRead'
                                    526 ;------------------------------------------------------------
                                    527 ;data                      Allocated to registers r5 r6 r7 
                                    528 ;i                         Allocated to registers r4 
                                    529 ;------------------------------------------------------------
                                    530 ;	DS1302/DS1302.c:115: void ds1302BurstRead(unsigned char *data)
                                    531 ;	-----------------------------------------
                                    532 ;	 function ds1302BurstRead
                                    533 ;	-----------------------------------------
      000098                        534 _ds1302BurstRead:
      000098 AD 82            [24]  535 	mov	r5,dpl
      00009A AE 83            [24]  536 	mov	r6,dph
      00009C AF F0            [24]  537 	mov	r7,b
                                    538 ;	DS1302/DS1302.c:118: DS1302_CE = 1;   //使能定ds1302芯片
      00009E D2 97            [12]  539 	setb	_P1_7
                                    540 ;	DS1302/DS1302.c:119: ds1302ByteWrite( 0xBF );
      0000A0 75 82 BF         [24]  541 	mov	dpl,#0xBF
      0000A3 C0 07            [24]  542 	push	ar7
      0000A5 C0 06            [24]  543 	push	ar6
      0000A7 C0 05            [24]  544 	push	ar5
      0000A9 12r00r37         [24]  545 	lcall	_ds1302ByteWrite
      0000AC D0 05            [24]  546 	pop	ar5
      0000AE D0 06            [24]  547 	pop	ar6
      0000B0 D0 07            [24]  548 	pop	ar7
                                    549 ;	DS1302/DS1302.c:120: for(i = 0; i < 8; i++)
      0000B2 7C 00            [12]  550 	mov	r4,#0x00
      0000B4                        551 00102$:
                                    552 ;	DS1302/DS1302.c:122: data[i] = ds1302ByteRead();
      0000B4 EC               [12]  553 	mov	a,r4
      0000B5 2D               [12]  554 	add	a,r5
      0000B6 F9               [12]  555 	mov	r1,a
      0000B7 E4               [12]  556 	clr	a
      0000B8 3E               [12]  557 	addc	a,r6
      0000B9 FA               [12]  558 	mov	r2,a
      0000BA 8F 03            [24]  559 	mov	ar3,r7
      0000BC C0 07            [24]  560 	push	ar7
      0000BE C0 06            [24]  561 	push	ar6
      0000C0 C0 05            [24]  562 	push	ar5
      0000C2 C0 04            [24]  563 	push	ar4
      0000C4 C0 03            [24]  564 	push	ar3
      0000C6 C0 02            [24]  565 	push	ar2
      0000C8 C0 01            [24]  566 	push	ar1
      0000CA 12r00r53         [24]  567 	lcall	_ds1302ByteRead
      0000CD A8 82            [24]  568 	mov	r0,dpl
      0000CF D0 01            [24]  569 	pop	ar1
      0000D1 D0 02            [24]  570 	pop	ar2
      0000D3 D0 03            [24]  571 	pop	ar3
      0000D5 D0 04            [24]  572 	pop	ar4
      0000D7 D0 05            [24]  573 	pop	ar5
      0000D9 D0 06            [24]  574 	pop	ar6
      0000DB D0 07            [24]  575 	pop	ar7
      0000DD 89 82            [24]  576 	mov	dpl,r1
      0000DF 8A 83            [24]  577 	mov	dph,r2
      0000E1 8B F0            [24]  578 	mov	b,r3
      0000E3 E8               [12]  579 	mov	a,r0
      0000E4 12r00r00         [24]  580 	lcall	__gptrput
                                    581 ;	DS1302/DS1302.c:120: for(i = 0; i < 8; i++)
      0000E7 0C               [12]  582 	inc	r4
      0000E8 BC 08 00         [24]  583 	cjne	r4,#0x08,00113$
      0000EB                        584 00113$:
      0000EB 40 C7            [24]  585 	jc	00102$
                                    586 ;	DS1302/DS1302.c:124: DS1302_CE = 0;   //禁止定ds1302芯片
      0000ED C2 97            [12]  587 	clr	_P1_7
      0000EF 22               [24]  588 	ret
                                    589 ;------------------------------------------------------------
                                    590 ;Allocation info for local variables in function 'ds1302BurstWrite'
                                    591 ;------------------------------------------------------------
                                    592 ;data                      Allocated to registers r5 r6 r7 
                                    593 ;i                         Allocated to registers r4 
                                    594 ;------------------------------------------------------------
                                    595 ;	DS1302/DS1302.c:133: void ds1302BurstWrite(unsigned char *data)
                                    596 ;	-----------------------------------------
                                    597 ;	 function ds1302BurstWrite
                                    598 ;	-----------------------------------------
      0000F0                        599 _ds1302BurstWrite:
      0000F0 AD 82            [24]  600 	mov	r5,dpl
      0000F2 AE 83            [24]  601 	mov	r6,dph
      0000F4 AF F0            [24]  602 	mov	r7,b
                                    603 ;	DS1302/DS1302.c:136: DS1302_CE = 1;   //使能定ds1302芯片
      0000F6 D2 97            [12]  604 	setb	_P1_7
                                    605 ;	DS1302/DS1302.c:137: ds1302ByteWrite( 0xBE );
      0000F8 75 82 BE         [24]  606 	mov	dpl,#0xBE
      0000FB C0 07            [24]  607 	push	ar7
      0000FD C0 06            [24]  608 	push	ar6
      0000FF C0 05            [24]  609 	push	ar5
      000101 12r00r37         [24]  610 	lcall	_ds1302ByteWrite
      000104 D0 05            [24]  611 	pop	ar5
      000106 D0 06            [24]  612 	pop	ar6
      000108 D0 07            [24]  613 	pop	ar7
                                    614 ;	DS1302/DS1302.c:138: for(i = 0; i < 8; i++)
      00010A 7C 00            [12]  615 	mov	r4,#0x00
      00010C                        616 00102$:
                                    617 ;	DS1302/DS1302.c:140: ds1302ByteWrite(data[i]);
      00010C EC               [12]  618 	mov	a,r4
      00010D 2D               [12]  619 	add	a,r5
      00010E F9               [12]  620 	mov	r1,a
      00010F E4               [12]  621 	clr	a
      000110 3E               [12]  622 	addc	a,r6
      000111 FA               [12]  623 	mov	r2,a
      000112 8F 03            [24]  624 	mov	ar3,r7
      000114 89 82            [24]  625 	mov	dpl,r1
      000116 8A 83            [24]  626 	mov	dph,r2
      000118 8B F0            [24]  627 	mov	b,r3
      00011A 12r00r00         [24]  628 	lcall	__gptrget
      00011D F5 82            [12]  629 	mov	dpl,a
      00011F C0 07            [24]  630 	push	ar7
      000121 C0 06            [24]  631 	push	ar6
      000123 C0 05            [24]  632 	push	ar5
      000125 C0 04            [24]  633 	push	ar4
      000127 12r00r37         [24]  634 	lcall	_ds1302ByteWrite
      00012A D0 04            [24]  635 	pop	ar4
      00012C D0 05            [24]  636 	pop	ar5
      00012E D0 06            [24]  637 	pop	ar6
      000130 D0 07            [24]  638 	pop	ar7
                                    639 ;	DS1302/DS1302.c:138: for(i = 0; i < 8; i++)
      000132 0C               [12]  640 	inc	r4
      000133 BC 08 00         [24]  641 	cjne	r4,#0x08,00113$
      000136                        642 00113$:
      000136 40 D4            [24]  643 	jc	00102$
                                    644 ;	DS1302/DS1302.c:142: DS1302_CE = 0;   //禁止定ds1302芯片
      000138 C2 97            [12]  645 	clr	_P1_7
      00013A 22               [24]  646 	ret
                                    647 ;------------------------------------------------------------
                                    648 ;Allocation info for local variables in function 'setDs1302Time'
                                    649 ;------------------------------------------------------------
                                    650 ;date                      Allocated to registers 
                                    651 ;------------------------------------------------------------
                                    652 ;	DS1302/DS1302.c:152: void setDs1302Time(DataStruct *date)
                                    653 ;	-----------------------------------------
                                    654 ;	 function setDs1302Time
                                    655 ;	-----------------------------------------
      00013B                        656 _setDs1302Time:
                                    657 ;	DS1302/DS1302.c:155: }
      00013B 22               [24]  658 	ret
                                    659 ;------------------------------------------------------------
                                    660 ;Allocation info for local variables in function 'getDs1302Time'
                                    661 ;------------------------------------------------------------
                                    662 ;date                      Allocated to registers 
                                    663 ;------------------------------------------------------------
                                    664 ;	DS1302/DS1302.c:163: void getDs1302Time(DataStruct *date)
                                    665 ;	-----------------------------------------
                                    666 ;	 function getDs1302Time
                                    667 ;	-----------------------------------------
      00013C                        668 _getDs1302Time:
                                    669 ;	DS1302/DS1302.c:166: }
      00013C 22               [24]  670 	ret
                                    671 	.area CSEG    (CODE)
                                    672 	.area CONST   (CODE)
                                    673 	.area XINIT   (CODE)
                                    674 	.area CABS    (ABS,CODE)

                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Mar 24 2016) (Linux)
                                      4 ; This file was generated Thu Sep 29 13:34:06 2016
                                      5 ;--------------------------------------------------------
                                      6 	.module main
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _main
                                     13 	.globl _HC05GetRole
                                     14 	.globl _HC05Init
                                     15 	.globl _LcdShowString
                                     16 	.globl _initLcd
                                     17 	.globl _initUart
                                     18 	.globl _TF2
                                     19 	.globl _EXF2
                                     20 	.globl _RCLK
                                     21 	.globl _TCLK
                                     22 	.globl _EXEN2
                                     23 	.globl _TR2
                                     24 	.globl _C_T2
                                     25 	.globl _CP_RL2
                                     26 	.globl _T2CON_7
                                     27 	.globl _T2CON_6
                                     28 	.globl _T2CON_5
                                     29 	.globl _T2CON_4
                                     30 	.globl _T2CON_3
                                     31 	.globl _T2CON_2
                                     32 	.globl _T2CON_1
                                     33 	.globl _T2CON_0
                                     34 	.globl _PT2
                                     35 	.globl _ET2
                                     36 	.globl _CY
                                     37 	.globl _AC
                                     38 	.globl _F0
                                     39 	.globl _RS1
                                     40 	.globl _RS0
                                     41 	.globl _OV
                                     42 	.globl _F1
                                     43 	.globl _P
                                     44 	.globl _PS
                                     45 	.globl _PT1
                                     46 	.globl _PX1
                                     47 	.globl _PT0
                                     48 	.globl _PX0
                                     49 	.globl _RD
                                     50 	.globl _WR
                                     51 	.globl _T1
                                     52 	.globl _T0
                                     53 	.globl _INT1
                                     54 	.globl _INT0
                                     55 	.globl _TXD
                                     56 	.globl _RXD
                                     57 	.globl _P3_7
                                     58 	.globl _P3_6
                                     59 	.globl _P3_5
                                     60 	.globl _P3_4
                                     61 	.globl _P3_3
                                     62 	.globl _P3_2
                                     63 	.globl _P3_1
                                     64 	.globl _P3_0
                                     65 	.globl _EA
                                     66 	.globl _ES
                                     67 	.globl _ET1
                                     68 	.globl _EX1
                                     69 	.globl _ET0
                                     70 	.globl _EX0
                                     71 	.globl _P2_7
                                     72 	.globl _P2_6
                                     73 	.globl _P2_5
                                     74 	.globl _P2_4
                                     75 	.globl _P2_3
                                     76 	.globl _P2_2
                                     77 	.globl _P2_1
                                     78 	.globl _P2_0
                                     79 	.globl _SM0
                                     80 	.globl _SM1
                                     81 	.globl _SM2
                                     82 	.globl _REN
                                     83 	.globl _TB8
                                     84 	.globl _RB8
                                     85 	.globl _TI
                                     86 	.globl _RI
                                     87 	.globl _P1_7
                                     88 	.globl _P1_6
                                     89 	.globl _P1_5
                                     90 	.globl _P1_4
                                     91 	.globl _P1_3
                                     92 	.globl _P1_2
                                     93 	.globl _P1_1
                                     94 	.globl _P1_0
                                     95 	.globl _TF1
                                     96 	.globl _TR1
                                     97 	.globl _TF0
                                     98 	.globl _TR0
                                     99 	.globl _IE1
                                    100 	.globl _IT1
                                    101 	.globl _IE0
                                    102 	.globl _IT0
                                    103 	.globl _P0_7
                                    104 	.globl _P0_6
                                    105 	.globl _P0_5
                                    106 	.globl _P0_4
                                    107 	.globl _P0_3
                                    108 	.globl _P0_2
                                    109 	.globl _P0_1
                                    110 	.globl _P0_0
                                    111 	.globl _TH2
                                    112 	.globl _TL2
                                    113 	.globl _RCAP2H
                                    114 	.globl _RCAP2L
                                    115 	.globl _T2CON
                                    116 	.globl _B
                                    117 	.globl _ACC
                                    118 	.globl _PSW
                                    119 	.globl _IP
                                    120 	.globl _P3
                                    121 	.globl _IE
                                    122 	.globl _P2
                                    123 	.globl _SBUF
                                    124 	.globl _SCON
                                    125 	.globl _P1
                                    126 	.globl _TH1
                                    127 	.globl _TH0
                                    128 	.globl _TL1
                                    129 	.globl _TL0
                                    130 	.globl _TMOD
                                    131 	.globl _TCON
                                    132 	.globl _PCON
                                    133 	.globl _DPH
                                    134 	.globl _DPL
                                    135 	.globl _SP
                                    136 	.globl _P0
                                    137 ;--------------------------------------------------------
                                    138 ; special function registers
                                    139 ;--------------------------------------------------------
                                    140 	.area RSEG    (ABS,DATA)
      000000                        141 	.org 0x0000
                           000080   142 _P0	=	0x0080
                           000081   143 _SP	=	0x0081
                           000082   144 _DPL	=	0x0082
                           000083   145 _DPH	=	0x0083
                           000087   146 _PCON	=	0x0087
                           000088   147 _TCON	=	0x0088
                           000089   148 _TMOD	=	0x0089
                           00008A   149 _TL0	=	0x008a
                           00008B   150 _TL1	=	0x008b
                           00008C   151 _TH0	=	0x008c
                           00008D   152 _TH1	=	0x008d
                           000090   153 _P1	=	0x0090
                           000098   154 _SCON	=	0x0098
                           000099   155 _SBUF	=	0x0099
                           0000A0   156 _P2	=	0x00a0
                           0000A8   157 _IE	=	0x00a8
                           0000B0   158 _P3	=	0x00b0
                           0000B8   159 _IP	=	0x00b8
                           0000D0   160 _PSW	=	0x00d0
                           0000E0   161 _ACC	=	0x00e0
                           0000F0   162 _B	=	0x00f0
                           0000C8   163 _T2CON	=	0x00c8
                           0000CA   164 _RCAP2L	=	0x00ca
                           0000CB   165 _RCAP2H	=	0x00cb
                           0000CC   166 _TL2	=	0x00cc
                           0000CD   167 _TH2	=	0x00cd
                                    168 ;--------------------------------------------------------
                                    169 ; special function bits
                                    170 ;--------------------------------------------------------
                                    171 	.area RSEG    (ABS,DATA)
      000000                        172 	.org 0x0000
                           000080   173 _P0_0	=	0x0080
                           000081   174 _P0_1	=	0x0081
                           000082   175 _P0_2	=	0x0082
                           000083   176 _P0_3	=	0x0083
                           000084   177 _P0_4	=	0x0084
                           000085   178 _P0_5	=	0x0085
                           000086   179 _P0_6	=	0x0086
                           000087   180 _P0_7	=	0x0087
                           000088   181 _IT0	=	0x0088
                           000089   182 _IE0	=	0x0089
                           00008A   183 _IT1	=	0x008a
                           00008B   184 _IE1	=	0x008b
                           00008C   185 _TR0	=	0x008c
                           00008D   186 _TF0	=	0x008d
                           00008E   187 _TR1	=	0x008e
                           00008F   188 _TF1	=	0x008f
                           000090   189 _P1_0	=	0x0090
                           000091   190 _P1_1	=	0x0091
                           000092   191 _P1_2	=	0x0092
                           000093   192 _P1_3	=	0x0093
                           000094   193 _P1_4	=	0x0094
                           000095   194 _P1_5	=	0x0095
                           000096   195 _P1_6	=	0x0096
                           000097   196 _P1_7	=	0x0097
                           000098   197 _RI	=	0x0098
                           000099   198 _TI	=	0x0099
                           00009A   199 _RB8	=	0x009a
                           00009B   200 _TB8	=	0x009b
                           00009C   201 _REN	=	0x009c
                           00009D   202 _SM2	=	0x009d
                           00009E   203 _SM1	=	0x009e
                           00009F   204 _SM0	=	0x009f
                           0000A0   205 _P2_0	=	0x00a0
                           0000A1   206 _P2_1	=	0x00a1
                           0000A2   207 _P2_2	=	0x00a2
                           0000A3   208 _P2_3	=	0x00a3
                           0000A4   209 _P2_4	=	0x00a4
                           0000A5   210 _P2_5	=	0x00a5
                           0000A6   211 _P2_6	=	0x00a6
                           0000A7   212 _P2_7	=	0x00a7
                           0000A8   213 _EX0	=	0x00a8
                           0000A9   214 _ET0	=	0x00a9
                           0000AA   215 _EX1	=	0x00aa
                           0000AB   216 _ET1	=	0x00ab
                           0000AC   217 _ES	=	0x00ac
                           0000AF   218 _EA	=	0x00af
                           0000B0   219 _P3_0	=	0x00b0
                           0000B1   220 _P3_1	=	0x00b1
                           0000B2   221 _P3_2	=	0x00b2
                           0000B3   222 _P3_3	=	0x00b3
                           0000B4   223 _P3_4	=	0x00b4
                           0000B5   224 _P3_5	=	0x00b5
                           0000B6   225 _P3_6	=	0x00b6
                           0000B7   226 _P3_7	=	0x00b7
                           0000B0   227 _RXD	=	0x00b0
                           0000B1   228 _TXD	=	0x00b1
                           0000B2   229 _INT0	=	0x00b2
                           0000B3   230 _INT1	=	0x00b3
                           0000B4   231 _T0	=	0x00b4
                           0000B5   232 _T1	=	0x00b5
                           0000B6   233 _WR	=	0x00b6
                           0000B7   234 _RD	=	0x00b7
                           0000B8   235 _PX0	=	0x00b8
                           0000B9   236 _PT0	=	0x00b9
                           0000BA   237 _PX1	=	0x00ba
                           0000BB   238 _PT1	=	0x00bb
                           0000BC   239 _PS	=	0x00bc
                           0000D0   240 _P	=	0x00d0
                           0000D1   241 _F1	=	0x00d1
                           0000D2   242 _OV	=	0x00d2
                           0000D3   243 _RS0	=	0x00d3
                           0000D4   244 _RS1	=	0x00d4
                           0000D5   245 _F0	=	0x00d5
                           0000D6   246 _AC	=	0x00d6
                           0000D7   247 _CY	=	0x00d7
                           0000AD   248 _ET2	=	0x00ad
                           0000BD   249 _PT2	=	0x00bd
                           0000C8   250 _T2CON_0	=	0x00c8
                           0000C9   251 _T2CON_1	=	0x00c9
                           0000CA   252 _T2CON_2	=	0x00ca
                           0000CB   253 _T2CON_3	=	0x00cb
                           0000CC   254 _T2CON_4	=	0x00cc
                           0000CD   255 _T2CON_5	=	0x00cd
                           0000CE   256 _T2CON_6	=	0x00ce
                           0000CF   257 _T2CON_7	=	0x00cf
                           0000C8   258 _CP_RL2	=	0x00c8
                           0000C9   259 _C_T2	=	0x00c9
                           0000CA   260 _TR2	=	0x00ca
                           0000CB   261 _EXEN2	=	0x00cb
                           0000CC   262 _TCLK	=	0x00cc
                           0000CD   263 _RCLK	=	0x00cd
                           0000CE   264 _EXF2	=	0x00ce
                           0000CF   265 _TF2	=	0x00cf
                                    266 ;--------------------------------------------------------
                                    267 ; overlayable register banks
                                    268 ;--------------------------------------------------------
                                    269 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        270 	.ds 8
                                    271 ;--------------------------------------------------------
                                    272 ; internal ram data
                                    273 ;--------------------------------------------------------
                                    274 	.area DSEG    (DATA)
                                    275 ;--------------------------------------------------------
                                    276 ; overlayable items in internal ram 
                                    277 ;--------------------------------------------------------
                                    278 ;--------------------------------------------------------
                                    279 ; Stack segment in internal ram 
                                    280 ;--------------------------------------------------------
                                    281 	.area	SSEG
      000000                        282 __start__stack:
      000000                        283 	.ds	1
                                    284 
                                    285 ;--------------------------------------------------------
                                    286 ; indirectly addressable internal ram data
                                    287 ;--------------------------------------------------------
                                    288 	.area ISEG    (DATA)
                                    289 ;--------------------------------------------------------
                                    290 ; absolute internal ram data
                                    291 ;--------------------------------------------------------
                                    292 	.area IABS    (ABS,DATA)
                                    293 	.area IABS    (ABS,DATA)
                                    294 ;--------------------------------------------------------
                                    295 ; bit data
                                    296 ;--------------------------------------------------------
                                    297 	.area BSEG    (BIT)
                                    298 ;--------------------------------------------------------
                                    299 ; paged external ram data
                                    300 ;--------------------------------------------------------
                                    301 	.area PSEG    (PAG,XDATA)
                                    302 ;--------------------------------------------------------
                                    303 ; external ram data
                                    304 ;--------------------------------------------------------
                                    305 	.area XSEG    (XDATA)
      000000                        306 _main_i_1_27:
      000000                        307 	.ds 2
      000002                        308 _main_cmdStr_1_27:
      000002                        309 	.ds 11
      00000D                        310 _main_retStr_1_27:
      00000D                        311 	.ds 16
                                    312 ;--------------------------------------------------------
                                    313 ; absolute external ram data
                                    314 ;--------------------------------------------------------
                                    315 	.area XABS    (ABS,XDATA)
                                    316 ;--------------------------------------------------------
                                    317 ; external initialized ram data
                                    318 ;--------------------------------------------------------
                                    319 	.area XISEG   (XDATA)
                                    320 	.area HOME    (CODE)
                                    321 	.area GSINIT0 (CODE)
                                    322 	.area GSINIT1 (CODE)
                                    323 	.area GSINIT2 (CODE)
                                    324 	.area GSINIT3 (CODE)
                                    325 	.area GSINIT4 (CODE)
                                    326 	.area GSINIT5 (CODE)
                                    327 	.area GSINIT  (CODE)
                                    328 	.area GSFINAL (CODE)
                                    329 	.area CSEG    (CODE)
                                    330 ;--------------------------------------------------------
                                    331 ; interrupt vector 
                                    332 ;--------------------------------------------------------
                                    333 	.area HOME    (CODE)
      000000                        334 __interrupt_vect:
      000000 02r00r00         [24]  335 	ljmp	__sdcc_gsinit_startup
      000003 32               [24]  336 	reti
      000004                        337 	.ds	7
      00000B 02r00r00         [24]  338 	ljmp	_InterruptTimer0
      00000E                        339 	.ds	5
      000013 32               [24]  340 	reti
      000014                        341 	.ds	7
      00001B 32               [24]  342 	reti
      00001C                        343 	.ds	7
      000023 02r00r00         [24]  344 	ljmp	_InterruptUART
      000026                        345 	.ds	5
      00002B 02r00r00         [24]  346 	ljmp	_InterruptTimer2
                                    347 ;--------------------------------------------------------
                                    348 ; global & static initialisations
                                    349 ;--------------------------------------------------------
                                    350 	.area HOME    (CODE)
                                    351 	.area GSINIT  (CODE)
                                    352 	.area GSFINAL (CODE)
                                    353 	.area GSINIT  (CODE)
                                    354 	.globl __sdcc_gsinit_startup
                                    355 	.globl __sdcc_program_startup
                                    356 	.globl __start__stack
                                    357 	.globl __mcs51_genXINIT
                                    358 	.globl __mcs51_genXRAMCLEAR
                                    359 	.globl __mcs51_genRAMCLEAR
                                    360 	.area GSFINAL (CODE)
      000000 02r00r2E         [24]  361 	ljmp	__sdcc_program_startup
                                    362 ;--------------------------------------------------------
                                    363 ; Home
                                    364 ;--------------------------------------------------------
                                    365 	.area HOME    (CODE)
                                    366 	.area HOME    (CODE)
      00002E                        367 __sdcc_program_startup:
      00002E 02r00r00         [24]  368 	ljmp	_main
                                    369 ;	return from main will return to caller
                                    370 ;--------------------------------------------------------
                                    371 ; code
                                    372 ;--------------------------------------------------------
                                    373 	.area CSEG    (CODE)
                                    374 ;------------------------------------------------------------
                                    375 ;Allocation info for local variables in function 'main'
                                    376 ;------------------------------------------------------------
                                    377 ;nu                        Allocated to registers 
                                    378 ;retLen                    Allocated to registers r7 
                                    379 ;i                         Allocated with name '_main_i_1_27'
                                    380 ;cmdLen                    Allocated with name '_main_cmdLen_1_27'
                                    381 ;cmdStr                    Allocated with name '_main_cmdStr_1_27'
                                    382 ;retStr                    Allocated with name '_main_retStr_1_27'
                                    383 ;------------------------------------------------------------
                                    384 ;	main.c:12: void main()
                                    385 ;	-----------------------------------------
                                    386 ;	 function main
                                    387 ;	-----------------------------------------
      000000                        388 _main:
                           000007   389 	ar7 = 0x07
                           000006   390 	ar6 = 0x06
                           000005   391 	ar5 = 0x05
                           000004   392 	ar4 = 0x04
                           000003   393 	ar3 = 0x03
                           000002   394 	ar2 = 0x02
                           000001   395 	ar1 = 0x01
                           000000   396 	ar0 = 0x00
                                    397 ;	main.c:15: __xdata unsigned int i = 0;
      000000 90r00r00         [24]  398 	mov	dptr,#_main_i_1_27
      000003 E4               [12]  399 	clr	a
      000004 F0               [24]  400 	movx	@dptr,a
      000005 A3               [24]  401 	inc	dptr
      000006 F0               [24]  402 	movx	@dptr,a
                                    403 ;	main.c:18: __xdata unsigned char cmdStr[] = "AT+ROLE?\r\n";
      000007 90r00r02         [24]  404 	mov	dptr,#_main_cmdStr_1_27
      00000A 74 41            [12]  405 	mov	a,#0x41
      00000C F0               [24]  406 	movx	@dptr,a
      00000D 90r00r03         [24]  407 	mov	dptr,#(_main_cmdStr_1_27 + 0x0001)
      000010 74 54            [12]  408 	mov	a,#0x54
      000012 F0               [24]  409 	movx	@dptr,a
      000013 90r00r04         [24]  410 	mov	dptr,#(_main_cmdStr_1_27 + 0x0002)
      000016 74 2B            [12]  411 	mov	a,#0x2B
      000018 F0               [24]  412 	movx	@dptr,a
      000019 90r00r05         [24]  413 	mov	dptr,#(_main_cmdStr_1_27 + 0x0003)
      00001C 74 52            [12]  414 	mov	a,#0x52
      00001E F0               [24]  415 	movx	@dptr,a
      00001F 90r00r06         [24]  416 	mov	dptr,#(_main_cmdStr_1_27 + 0x0004)
      000022 74 4F            [12]  417 	mov	a,#0x4F
      000024 F0               [24]  418 	movx	@dptr,a
      000025 90r00r07         [24]  419 	mov	dptr,#(_main_cmdStr_1_27 + 0x0005)
      000028 74 4C            [12]  420 	mov	a,#0x4C
      00002A F0               [24]  421 	movx	@dptr,a
      00002B 90r00r08         [24]  422 	mov	dptr,#(_main_cmdStr_1_27 + 0x0006)
      00002E 74 45            [12]  423 	mov	a,#0x45
      000030 F0               [24]  424 	movx	@dptr,a
      000031 90r00r09         [24]  425 	mov	dptr,#(_main_cmdStr_1_27 + 0x0007)
      000034 74 3F            [12]  426 	mov	a,#0x3F
      000036 F0               [24]  427 	movx	@dptr,a
      000037 90r00r0A         [24]  428 	mov	dptr,#(_main_cmdStr_1_27 + 0x0008)
      00003A 74 0D            [12]  429 	mov	a,#0x0D
      00003C F0               [24]  430 	movx	@dptr,a
      00003D 90r00r0B         [24]  431 	mov	dptr,#(_main_cmdStr_1_27 + 0x0009)
      000040 74 0A            [12]  432 	mov	a,#0x0A
      000042 F0               [24]  433 	movx	@dptr,a
      000043 90r00r0C         [24]  434 	mov	dptr,#(_main_cmdStr_1_27 + 0x000a)
      000046 E4               [12]  435 	clr	a
      000047 F0               [24]  436 	movx	@dptr,a
                                    437 ;	main.c:22: initUart(9600);
      000048 90 25 80         [24]  438 	mov	dptr,#0x2580
      00004B 12r00r00         [24]  439 	lcall	_initUart
                                    440 ;	main.c:23: initLcd();
      00004E 12r00r00         [24]  441 	lcall	_initLcd
                                    442 ;	main.c:24: HC05Init();
      000051 12r00r00         [24]  443 	lcall	_HC05Init
                                    444 ;	main.c:26: while(1)
      000054                        445 00104$:
                                    446 ;	main.c:28: i++;
      000054 90r00r00         [24]  447 	mov	dptr,#_main_i_1_27
      000057 E0               [24]  448 	movx	a,@dptr
      000058 24 01            [12]  449 	add	a,#0x01
      00005A F0               [24]  450 	movx	@dptr,a
      00005B A3               [24]  451 	inc	dptr
      00005C E0               [24]  452 	movx	a,@dptr
      00005D 34 00            [12]  453 	addc	a,#0x00
      00005F F0               [24]  454 	movx	@dptr,a
                                    455 ;	main.c:29: if(i > 50000)
      000060 90r00r00         [24]  456 	mov	dptr,#_main_i_1_27
      000063 E0               [24]  457 	movx	a,@dptr
      000064 FE               [12]  458 	mov	r6,a
      000065 A3               [24]  459 	inc	dptr
      000066 E0               [24]  460 	movx	a,@dptr
      000067 FF               [12]  461 	mov	r7,a
      000068 7D 00            [12]  462 	mov	r5,#0x00
      00006A 7C 00            [12]  463 	mov	r4,#0x00
      00006C C3               [12]  464 	clr	c
      00006D 74 50            [12]  465 	mov	a,#0x50
      00006F 9E               [12]  466 	subb	a,r6
      000070 74 C3            [12]  467 	mov	a,#0xC3
      000072 9F               [12]  468 	subb	a,r7
      000073 E4               [12]  469 	clr	a
      000074 9D               [12]  470 	subb	a,r5
      000075 74 80            [12]  471 	mov	a,#(0x00 ^ 0x80)
      000077 8C F0            [24]  472 	mov	b,r4
      000079 63 F0 80         [24]  473 	xrl	b,#0x80
      00007C 95 F0            [12]  474 	subb	a,b
      00007E 50 D4            [24]  475 	jnc	00104$
                                    476 ;	main.c:32: retLen = HC05GetRole(cmdStr,cmdLen,retStr,15);
      000080 75*00r0D         [24]  477 	mov	_HC05GetRole_PARM_3,#_main_retStr_1_27
      000083 75*01s00         [24]  478 	mov	(_HC05GetRole_PARM_3 + 1),#(_main_retStr_1_27 >> 8)
      000086 75*02 00         [24]  479 	mov	(_HC05GetRole_PARM_3 + 2),#0x00
      000089 75*00 0A         [24]  480 	mov	_HC05GetRole_PARM_2,#0x0A
      00008C 75*01 00         [24]  481 	mov	(_HC05GetRole_PARM_2 + 1),#0x00
      00008F 75*00 0F         [24]  482 	mov	_HC05GetRole_PARM_4,#0x0F
      000092 75*01 00         [24]  483 	mov	(_HC05GetRole_PARM_4 + 1),#0x00
      000095 90r00r02         [24]  484 	mov	dptr,#_main_cmdStr_1_27
      000098 75 F0 00         [24]  485 	mov	b,#0x00
      00009B 12r00r00         [24]  486 	lcall	_HC05GetRole
                                    487 ;	main.c:33: retStr[retLen-1] = '0'+nu;
      00009E E5 82            [12]  488 	mov	a,dpl
      0000A0 FF               [12]  489 	mov	r7,a
      0000A1 14               [12]  490 	dec	a
      0000A2 24r0D            [12]  491 	add	a,#_main_retStr_1_27
      0000A4 F5 82            [12]  492 	mov	dpl,a
      0000A6 E4               [12]  493 	clr	a
      0000A7 34s00            [12]  494 	addc	a,#(_main_retStr_1_27 >> 8)
      0000A9 F5 83            [12]  495 	mov	dph,a
      0000AB 74 30            [12]  496 	mov	a,#0x30
      0000AD F0               [24]  497 	movx	@dptr,a
                                    498 ;	main.c:34: retStr[retLen] = '\0';
      0000AE EF               [12]  499 	mov	a,r7
      0000AF 24r0D            [12]  500 	add	a,#_main_retStr_1_27
      0000B1 F5 82            [12]  501 	mov	dpl,a
      0000B3 E4               [12]  502 	clr	a
      0000B4 34s00            [12]  503 	addc	a,#(_main_retStr_1_27 >> 8)
      0000B6 F5 83            [12]  504 	mov	dph,a
      0000B8 E4               [12]  505 	clr	a
      0000B9 F0               [24]  506 	movx	@dptr,a
                                    507 ;	main.c:36: LcdShowString(0,1,retStr);
      0000BA 75*00r0D         [24]  508 	mov	_LcdShowString_PARM_3,#_main_retStr_1_27
      0000BD 75*01s00         [24]  509 	mov	(_LcdShowString_PARM_3 + 1),#(_main_retStr_1_27 >> 8)
                                    510 ;	1-genFromRTrack replaced	mov	(_LcdShowString_PARM_3 + 2),#0x00
      0000C0 F5*02            [12]  511 	mov	(_LcdShowString_PARM_3 + 2),a
      0000C2 75*00 01         [24]  512 	mov	_LcdShowString_PARM_2,#0x01
      0000C5 75 82 00         [24]  513 	mov	dpl,#0x00
      0000C8 12r00r00         [24]  514 	lcall	_LcdShowString
                                    515 ;	main.c:37: i = 0;
      0000CB 90r00r00         [24]  516 	mov	dptr,#_main_i_1_27
      0000CE E4               [12]  517 	clr	a
      0000CF F0               [24]  518 	movx	@dptr,a
      0000D0 A3               [24]  519 	inc	dptr
      0000D1 F0               [24]  520 	movx	@dptr,a
      0000D2 02r00r54         [24]  521 	ljmp	00104$
                                    522 	.area CSEG    (CODE)
                                    523 	.area CONST   (CODE)
                                    524 	.area XINIT   (CODE)
                                    525 	.area CABS    (ABS,CODE)
